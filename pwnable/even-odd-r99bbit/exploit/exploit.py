from pwn import *
from ctypes import *
from ctypes.util import find_library
import base64
import time


p = remote('localhost', 5001)
# p = process('../binary_flag/even_odd')

c = CDLL(find_library('/lib/x86_64-linux-gnu/libc.so.6'))
c.srand(c.time(0))

even_odd = c.rand() % 2


p.recvuntil(b"even='e', odd='o': ")
if even_odd == 0:
    p.sendline(bytes('e', 'utf-8'))
elif even_odd == 1:
    p.sendline(bytes('o', 'utf-8'))

for i in range(49):
    try:
        recv = p.recvuntil(b"even='e', odd='o': ")
        c.rand()
        even_odd = c.rand() % 2
        print(recv.decode('utf-8'))
    except:
        print()
        p.interactive()

    if(even_odd == 0):
        p.sendline(bytes('e', 'utf-8'))
    if(even_odd == 1):
        p.sendline(bytes('o', 'utf-8'))


recv = p.recv(1024)

print(recv.decode('utf-8'))
p.interactive()